<% var methods = ['get','update','delete'] %>
<% var actions = ['REQUEST','SUCCESS','ERROR'] %>

<% types.forEach((type, index) => {
%>export const <%= type %> = '<%= type %>';
<% }) %><% type.forEach((t, index) => {
%>export const <%= t %>_<%=actions[index]%> = '<%= t %>'_<%=actions[index]%>;
<% }) %>

<% methods.forEach((method, index) => {
%>const <%= method %><%=Plural%>ActionTypes = {
  request: <%= types[index] %>_<%=actions[index]%>,
  success: <%= types[index] %>_<%=actions[index]%>,
  fail: <%= types[index] %>_<%=actions[index]%>,
}
<% }) %>
<% methods.forEach((method, index) => {
%>const <%= method %><%=Name%>ActionTypes = {
  request: <%= type[index] %>_<%=actions[index]%>,
  success: <%= type[index] %>_<%=actions[index]%>,
  fail: <%= type[index] %>_<%=actions[index]%>,
}
<% }) %>

const initialState = {
  data: [],
  sort: 'ASC',
  orderby: 'id',
  search: '',
  mustLoad: true,
  error: {},
  isFetching: false
};

export default function (state = initialState, action) {
  switch (action.type) {
    <% types.forEach((type, index) => { %>
      case <%= type %>_<%=actions[index]%>:
        return {
          ...state,
        }<% }) %><% type.forEach((t, index) => { %>
      case <%= t %>_<%=actions[index]%>:
        return {
          ...state,
        }<% }) %>
    default: return state
  }
}


<% methods.forEach((method, index) => {
%>
export const  <%= method %><%= Name %>Request = () => {
  
}
<% }) %><% methods.forEach((method, index) => {
%>
export const  <%= method %><%= Name %>sRequest = () => {
  
}
<% }) %>