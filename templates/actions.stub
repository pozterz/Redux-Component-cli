<% var methods = ['get','add','update','delete'] %>
<% var actions = ['REQUEST','SUCCESS','ERROR'] %>

<% types.forEach((type, index) => {
%><% actions.forEach((action, idx) => {
%>export const <%= type %>_<%=action%> = '<%= type %>_<%=action%>';
<% }) %>
<% }) %>
<% type.forEach((t, index) => {
%><% actions.forEach((action, idx) => {
%>export const <%= t %>_<%=action%> = '<%= t %>_<%=action%>';
<% }) %>
<% }) %>

<% methods.forEach((method, index) => {
%>const <%= method %><%=Plural%>ActionTypes = {
  request: <%= types[index] %>_<%=actions[index]%>,
  success: <%= types[index] %>_<%=actions[index]%>,
  fail: <%= types[index] %>_<%=actions[index]%>,
}
<% }) %>
<% methods.forEach((method, index) => {
%>const <%= method %><%=Name%>ActionTypes = {
  request: <%= type[index] %>_<%=actions[index]%>,
  success: <%= type[index] %>_<%=actions[index]%>,
  fail: <%= type[index] %>_<%=actions[index]%>,
}
<% }) %>

const initialState = {
  data: [],
  sort: 'ASC',
  orderby: 'id',
  search: '',
  mustLoad: true,
  error: {},
  isFetching: false
};

export default function (state = initialState, action) {
  switch (action.type) {
    <% types.forEach((type, index) => { %>
    <% actions.forEach((action, idx) => { %>
      case <%= type %>_<%=action%>:
        return {
          ...state,
        }<% }) %>
    <% }) %><% type.forEach((t, index) => { %>
    <% actions.forEach((action, idx) => { %>
      case <%= t %>_<%=action%>:
        return {
          ...state,
        }<% }) %>
      <% }) %>
    default: return state
  }
}


<% methods.forEach((method, index) => {
%>
export const  <%= method %><%= Name %>Request = () => {
  
}
<% }) %><% methods.forEach((method, index) => {
%>
export const  <%= method %><%= Name %>sRequest = () => {
  
}
<% }) %>